# #–ß—Ç–æ–±—ã –ø–µ—Ä–µ–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã.
# #–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–≤–µ–¥–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã, –ø–µ—Ä–µ–±–∏—Ä–∞—è –∏—Ö –ø–æ —Å—Ç—Ä–æ–∫–∞–º:

# rows, cols = 3, 4           # rows - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, cols - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤
#
# matrix  = [[2, 3, 1, 0],
#            [9, 4, 6, 8],
#            [4, 7, 2, 7]]
#
# for r in range(rows):
#     for c in range(cols):
#         print(matrix[r][c], end=' ')
#     print()

# #–î–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:
#
# rows, cols = 3, 4           # rows - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, cols - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤
#
# matrix  = [[2, 3, 1, 0],
#            [9, 4, 6, 8],
#            [4, 7, 2, 7]]
#
# for c in range(cols):
#     for r in range(rows):
#         print(matrix[r][c], end=' ')
#     print()

# # –≠–ª–µ–º–µ–Ω—Ç—ã —Å —Ä–∞–≤–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏ i == j –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏. –¢–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–±–æ–∑–Ω–∞—á–∞—é—Ç—Å—è matrix[i][i].
# # –≠–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ i –∏ j, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º i + j + 1 = n (–∏–ª–∏ j = n - i - 1),
# # –≥–¥–µ n ‚Äî —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –º–∞—Ç—Ä–∏—Ü—ã, –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏.
# # –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π –∏–ª–∏ –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
# n = 8
# matrix = [[0]*n for _ in range(n)]    # —Å–æ–∑–¥–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 8√ó8
#
# for i in range(n):                     # –∑–∞–ø–æ–ª–Ω—è–µ–º –≥–ª–∞–≤–Ω—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å 1-—Ü–∞–º–∏, –∞ –ø–æ–±–æ—á–Ω—É—é 2-–∫–∞–º–∏
#     matrix[i][i] = 1
#     matrix[i][n-i-1] = 2
#
# for r in range(n):                     # –≤—ã–≤–æ–¥–∏–º –º–∞—Ç—Ä–∏—Ü—É
#     for c in range(m):
#         print(matrix[r][c], end=' ')
#     print()

# #–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print_matrix() –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ n:
#
# def print_matrix(matrix, n, width=1):
#     for r in range(n):
#         for c in range(n):
#             print(str(matrix[r][c]).ljust(width), end=' ')
#         print()
# #–î–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ n, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —á–∏—Å–ª–∞–º–∏, —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:
#
# n = int(input())
# matrix = []
# for i in range(n):
#     temp = [int(num) for num in input().split()]
#     matrix.append(temp)


# #       –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã —Å –ø–µ—á–∞—Ç—å—é –ø–æ —Ä—è–¥–∞–º –∏ –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
# rows, columns = int(input()), int(input())
# arr = [[input() for _ in range(columns)] for _ in range(rows)]
# for row in arr:
#     print(*row)
# print()
# for i in range(columns):
#     for j in range(rows):
#         print(arr[j][i], end=' ')
#     print()

#         –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã —Ä—è–¥–∞–º–∏ –∏ —Å—É–º–º–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
# n = int(input())
# matrix = [input().split() for _ in range(n)]
# sum = 0
# for i in range(n):
#     sum += int(matrix[i][i])
# print(sum)

# #         –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤ –æ–±–ª–∞—Å—Ç–∏ 2 üå∂Ô∏è
# n = int(input())
# matrix = [[int(i) for i in input().split()] for _ in range(n)]
# max = -100    # –≤–∑—è—Ç–æ —á–∏—Å–ª–æ -100, —Ç–∞–∫ –∫–∞–∫ –≤ —Ç–µ—Å—Ç–∞—Ö –µ—Å—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞
# for i in range(n):
#     for j in range(n):
#         if (i >= j and i <= n - 1 - j) or (i <= j and i >= n - 1 - j):
#             if matrix[i][j] > max:
#                 max = matrix[i][j]
# print(max)

# #           –°—É–º–º—ã —á–µ—Ç–≤–µ—Ä—Ç–µ–π (—Ä–µ—à–µ–Ω–∏–µ –∫—É—Ä–∏–ª—å—â–∏–∫–∞)
# n = int(input())
# matrix = [[int(i) for i in input().split()] for _ in range(n)]
# count_1, count_2, count_3, count_4 = 0, 0, 0, 0
# for i in range(n):
#     for j in range(n):
#         if i < j:
#             if i < n - 1 - j:
#                 count_1 += matrix[i][j]
#             elif i > n - 1 - j:
#                 count_2 += matrix[i][j]
#         elif i > j:
#             if i > n - 1 - j:
#                 count_3 += matrix[i][j]
#             elif i < n - 1 - j:
#                 count_4 += matrix[i][j]
# print(f'–í–µ—Ä—Ö–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {count_1}')
# print(f'–ü—Ä–∞–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {count_2}')
# print(f'–ù–∏–∂–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {count_3}')
# print(f'–õ–µ–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {count_4}')

# #              –°—É–º–º—ã —á–µ—Ç–≤–µ—Ä—Ç–µ–π (—Ä–µ—à–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞)
# n = int(input())
# matrix = [[int(num) for num in input().split()] for i in range(n)]
# print(f"–í–µ—Ä—Ö–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {sum(matrix[i][j] for i in range(n) for j in range(n) if i < j and i < n - 1 - j)}")
# print(f"–ü—Ä–∞–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {sum(matrix[i][j] for i in range(n) for j in range(n) if j > i > n - 1 - j)}")
# print(f"–ù–∏–∂–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å: {sum(matrix[i][j] for i in range(n) for j in range(n) if i > j and i > n - 1 - j)}")
# print(f"–õ–µ–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {sum(matrix[i][j] for i in range(n) for j in range(n) if j < i < n - 1 - j)}")
